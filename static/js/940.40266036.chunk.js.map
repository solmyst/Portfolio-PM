{"version":3,"file":"static/js/940.40266036.chunk.js","mappings":"6JAGA,MAoFA,EApF4BA,KAC1B,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAeD,EAAAA,EAAAA,UAyErB,OAvEAE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAASJ,EAAUK,QACzB,IAAKD,EAAQ,OAEb,MAAME,EAAMF,EAAOG,WAAW,MAC9B,IAAIC,EAAY,GAEhB,MAAMC,EAAeA,KACnBL,EAAOM,MAAQC,OAAOC,WACtBR,EAAOS,OAASF,OAAOG,YACvBC,GAAe,EAIXA,EAAgBA,KACpBP,EAAY,GACZ,MACMQ,EADWL,OAAOC,WAAa,IACJ,EAAI,GAErC,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAeC,IACjCT,EAAUU,KAAK,CACbC,EAAGC,KAAKC,SAAWjB,EAAOM,MAC1BY,EAAGF,KAAKC,SAAWjB,EAAOS,OAC1BU,KAAsB,IAAhBH,KAAKC,SAAiB,GAC5BG,OAAgC,IAAvBJ,KAAKC,SAAW,IACzBI,OAAgC,IAAvBL,KAAKC,SAAW,IACzBK,QAAyB,GAAhBN,KAAKC,SAAiB,GAC/BM,MAAO,OAAuB,GAAhBP,KAAKC,SAAgB,kBAEvC,EAGIO,EAAUA,KACdtB,EAAIuB,UAAU,EAAG,EAAGzB,EAAOM,MAAON,EAAOS,QAEzCL,EAAUsB,SAAQC,IAChBA,EAASZ,GAAKY,EAASP,OACvBO,EAAST,GAAKS,EAASN,OAGnBM,EAASZ,EAAI,IAAGY,EAASZ,EAAIf,EAAOM,OACpCqB,EAASZ,EAAIf,EAAOM,QAAOqB,EAASZ,EAAI,GACxCY,EAAST,EAAI,IAAGS,EAAST,EAAIlB,EAAOS,QACpCkB,EAAST,EAAIlB,EAAOS,SAAQkB,EAAST,EAAI,GAG7ChB,EAAI0B,YACJ1B,EAAI2B,IAAIF,EAASZ,EAAGY,EAAST,EAAGS,EAASR,KAAM,EAAa,EAAVH,KAAKc,IACvD5B,EAAI6B,UAAYJ,EAASJ,MAAMS,QAAQ,IAAK,KAAKL,EAASL,YAAYU,QAAQ,MAAO,QACrF9B,EAAI+B,MAAM,IAGZnC,EAAaG,QAAUiC,sBAAsBV,EAAQ,EAWvD,OAPKjB,OAAO4B,WAAW,oCAAoCC,UACzD/B,IACAmB,KAGFjB,OAAO8B,iBAAiB,SAAUhC,GAE3B,KACDP,EAAaG,SACfqC,qBAAqBxC,EAAaG,SAEpCM,OAAOgC,oBAAoB,SAAUlC,EAAa,CACnD,GACA,KAGDmC,EAAAA,EAAAA,KAAA,UACEC,IAAK7C,EACL8C,UAAU,uCACVC,MAAO,CAAErB,QAAS,IAAMsB,OAAQ,IAChC,C","sources":["components/OptimizedBackground.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\n// Ultra-Lightweight Background Animation\r\nconst OptimizedBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    let particles = [];\r\n\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      initParticles();\r\n    };\r\n\r\n    // Create minimal particles for professional look\r\n    const initParticles = () => {\r\n      particles = [];\r\n      const isMobile = window.innerWidth < 768;\r\n      const particleCount = isMobile ? 8 : 15; // Much fewer particles\r\n      \r\n      for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 1.5 + 0.5,\r\n          speedX: (Math.random() - 0.5) * 0.3,\r\n          speedY: (Math.random() - 0.5) * 0.3,\r\n          opacity: Math.random() * 0.3 + 0.1,\r\n          color: `hsl(${Math.random() * 40 + 200}, 50%, 60%)`\r\n        });\r\n      }\r\n    };\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      particles.forEach(particle => {\r\n        particle.x += particle.speedX;\r\n        particle.y += particle.speedY;\r\n\r\n        // Wrap around edges\r\n        if (particle.x < 0) particle.x = canvas.width;\r\n        if (particle.x > canvas.width) particle.x = 0;\r\n        if (particle.y < 0) particle.y = canvas.height;\r\n        if (particle.y > canvas.height) particle.y = 0;\r\n\r\n        // Draw particle\r\n        ctx.beginPath();\r\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n        ctx.fillStyle = particle.color.replace(')', `, ${particle.opacity})`).replace('hsl', 'hsla');\r\n        ctx.fill();\r\n      });\r\n\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    // Only initialize if user prefers motion\r\n    if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {\r\n      resizeCanvas();\r\n      animate();\r\n    }\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n      window.removeEventListener('resize', resizeCanvas);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"absolute inset-0 pointer-events-none\"\r\n      style={{ opacity: 0.15, zIndex: 1 }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default OptimizedBackground;"],"names":["OptimizedBackground","canvasRef","useRef","animationRef","useEffect","canvas","current","ctx","getContext","particles","resizeCanvas","width","window","innerWidth","height","innerHeight","initParticles","particleCount","i","push","x","Math","random","y","size","speedX","speedY","opacity","color","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","replace","fill","requestAnimationFrame","matchMedia","matches","addEventListener","cancelAnimationFrame","removeEventListener","_jsx","ref","className","style","zIndex"],"sourceRoot":""}